//http://jessefreeman.com/dev-techniques/automating-typescript-with-node-and-grunt/

//https://github.com/gruntjs/grunt-contrib-watch
//https://www.npmjs.com/package/grunt-typescript
//https://c9.io/basarat/grunt-ts
//https://github.com/TypeStrong/grunt-ts
//https://github.com/DefinitelyTyped/DefinitelyTyped


//https://github.com/typings/typings
//https://github.com/typings/grunt-typings


//https://www.npmjs.com/package/grunt-ts
//https://github.com/TypeStrong/grunt-ts/blob/master/sample/Gruntfile.js
//https://www.tutorialspoint.com/grunt/grunt_configuring_tasks.htm

module.exports = function(grunt) {

    grunt.initConfig({
	pkg: grunt.file.readJSON('package.json'),
	
	typings: {
	    install: {}
	},

        ts: {
	    //http://www.typescriptlang.org/docs/handbook/compiler-options.html
            default : {
                src: ["**/*.ts", "!node_modules/**", '!bin/**'],
                options: {
                    module: 'commonjs'
                }
            }
        },

        clean: {
            all: ['**/*.js', '**/*.js.map',
		  '!node_modules/**', '!Gruntfile.js',
		  '!bin/**', 'test/**/*.js', 'test/**/*.js.map']
        },

	typescript: {
            base: {
                src: ['lib/**/*.ts'],
                dest: 'dist',
                options: {
                    module: 'amd',
                    target: 'es5'
                }
            }
        },

	intern: {//from https://github.com/theintern/intern-examples/tree/master/grunt-example
	    client: {
		options: {
		    // for other available options, see:
		    // https://github.com/theintern/intern/wiki/Using-Intern-with-Grunt#task-options
		    config: 'tests/intern'
		}
	    },
	    clientSuiteGet: {
		// an example of specifying a suite name
		options: {
		    config: 'tests/intern',
		    suites: ['tests/lib/get']
		}
	    },
	    runner: {
		options: {
		    config: 'tests/intern',
		    runType: 'runner'
		}
	    }
	},	

	watch: {
            files: '**/*.ts',
            tasks: ['typescript']
        }
	
    });

    grunt.log.write('Grunt running... \n');
    
    grunt.loadNpmTasks('grunt-typings');
    grunt.loadNpmTasks("grunt-ts");
    grunt.loadNpmTasks('grunt-contrib-clean');
    grunt.loadNpmTasks('grunt-contrib-watch');
    

    grunt.registerTask(
	'default',
	['ts','typings','watch']);    
};

//grunt.registerTask('build', ['tslint', 'browserify', 'connect:server', 'watch']);
